{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.13", "generated_at": "2025-09-30T02:27:48.933644Z", "invocation_id": "a571283e-f9ba-41a5-9752-ed92cf2b9896", "invocation_started_at": "2025-09-30T02:27:42.668877Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-30T02:27:43.537081Z", "completed_at": "2025-09-30T02:27:43.543848Z"}, {"name": "execute", "started_at": "2025-09-30T02:27:43.544204Z", "completed_at": "2025-09-30T02:27:48.915536Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 5.38067102432251, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.taxi_co2.trips_features", "compiled": true, "compiled_code": "\n\n-- Use the seeded lookup to get CO\u2082 rate (grams per mile).\n-- avg() makes this robust even if the seed has multiple rows.\nwith rate as (\n  select avg(co2_grams_per_mile)::double as co2_grams_per_mile\n  from \"transform\".\"main\".\"vehicle_emissions\"\n),\n\n-- Base trips with duration in hours\nbase as (\n  select\n    t.*,\n    date_diff('second', t.pickup_datetime, t.dropoff_datetime) / 3600.0 as duration_hours\n  from \"transform\".\"main\".\"stg_trips_2024_clean\" as t\n)\n\nselect\n  color,\n  pickup_datetime,\n  dropoff_datetime,\n  passenger_count,\n  trip_distance,\n  vendor_id,\n  pu_location_id,\n  do_location_id,\n  total_amount,\n\n  -- REQUIRED column names\n  trip_distance * rate.co2_grams_per_mile / 1000.0 as trip_co2_kgs,\n  case when duration_hours > 0 then trip_distance / duration_hours end as avg_mph,\n  extract(hour from pickup_datetime)::integer        as hour_of_day,\n  cast(strftime('%w', pickup_datetime) as integer)   as day_of_week,    -- 0=Sun..6=Sat\n  cast(strftime('%V', pickup_datetime) as integer)   as week_of_year,   -- ISO week\n  cast(strftime('%m', pickup_datetime) as integer)   as month_of_year   -- 1..12\n\nfrom base\ncross join rate", "relation_name": "\"transform\".\"main\".\"trips_features\"", "batch_results": null}], "elapsed_time": 5.515058994293213, "args": {"log_format_file": "debug", "require_batched_execution_for_custom_microbatch_strategy": false, "partial_parse": true, "quiet": false, "log_file_max_bytes": 10485760, "invocation_command": "dbt run --select trips_features --full-refresh", "skip_nodes_if_on_run_start_fails": false, "require_nested_cumulative_type_params": false, "version_check": true, "upload_to_artifacts_ingest_api": false, "log_level_file": "debug", "use_colors_file": true, "full_refresh": true, "introspect": true, "project_dir": "/Users/ruthmelese/Desktop/data-engineering-proj1/ds3022-data-project-1/dbt", "populate_cache": true, "show_resource_report": false, "require_yaml_configuration_for_mf_time_spines": false, "require_all_warnings_handled_by_warn_error": false, "empty": false, "show_all_deprecations": false, "use_fast_test_edges": false, "log_path": "/Users/ruthmelese/Desktop/data-engineering-proj1/ds3022-data-project-1/dbt/logs", "indirect_selection": "eager", "strict_mode": false, "state_modified_compare_more_unrendered_values": false, "static_parser": true, "warn_error_options": {"error": [], "warn": [], "silence": []}, "require_explicit_package_overrides_for_builtin_materializations": true, "use_colors": true, "log_format": "default", "vars": {}, "profiles_dir": "/Users/ruthmelese/Desktop/data-engineering-proj1/ds3022-data-project-1/dbt", "printer_width": 80, "source_freshness_run_project_hooks": true, "which": "run", "require_generic_test_arguments_property": true, "cache_selected_only": false, "write_json": true, "print": true, "log_level": "info", "favor_state": false, "exclude": [], "partial_parse_file_diff": true, "macro_debugging": false, "select": ["trips_features"], "defer": false, "state_modified_compare_vars": false, "validate_macro_args": false, "send_anonymous_usage_stats": true, "require_resource_names_without_spaces": true}}